1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<< 6 >>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<< 3 >>>

3. Did you receive help from anyone? List their names, status (classmate, 
   CS110 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   TA for section 1 and 5 just went over the exercise during class and went over topics such as classes which helped me understand it better.

4. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Particle Representation)
      Approach: First we construct an empty blob using the class Blob. We set up the x and y variables and also the pixels.
      Then we add those x and y coordinates to the empty blob. Then, I return the mass of this blob and the number of pixels in it.
      Returns the Euclidean distance between the center of mass of this blob and the center of mass of the other blob. Then to find the new coordinates
      and the pixels return a string representation of this blob.

      Issues and resolution: I encountered no issues.

   Problem 2 (Particle Identification)
      Approach:First I construct a data type to identify blobs in a picture.
              Constructs a blob finder to find blobs in the picture pic, using a luminance threshold tau then
              initialize an empty list for the blobs in pic then create a 2D list of booleans called marked, having the same dimensions as pic.
              Enumerate the pixels of pic, and for each pixel (i, j), create a Blob object called blob.
              call self._findBlob() with the right arguments, Add blob to self.blobs if it has a non-zero mass,
              Returns a list of all beads (blobs with mass >= pixels) and return if pixel (i, j) is out of bounds, or if it is marked, or if its
              luminance is less than tau.
              Add the pixel to blob and recursively call self._findBlob() on the N, E, W, S pixels.
      Issues and resolution: I had no issues in this problem

   Problem 3 (Particle Tracking)
      Approach: Accept inputs that are given in problem as command line arguments and then compute arithmetic from one bead to another using frames,
      for each bead in every frame also identify the one in the previous one that is
      close to radius, delta and closest to currBead and if there is one set it to true.
      Then write as a new line and set prevbeads to currbeads.

      Issues and resolution: I had no problems with this problem.

   Problem 4 (Data Analysis)
      Approach: First enter the variables given in problem and then accept displacement of beads from standard input and compute variance
      then compute constants and write to standard output

      Issues and resolution: This was one of the shortest ones and was the easiest as well.

5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

    I have no other comments but this was a pretty easy project that helped me understand classes and functions better.
